(()=>{const e=document.getElementById("canvas"),t=document.getElementById("canvasContainer"),a=e.getContext("2d"),n=document.getElementById("upload"),d=document.getElementById("scaleCheckbox"),o=document.getElementById("download");document.getElementById("controlContainer");let c=[];t.classList.add("hidden");const r=e=>new Promise(((t,a)=>{const n=new FileReader;n.onload=()=>{const d=new Image;d.onload=()=>t(d),d.onerror=()=>a(`Failed to load image: ${e.name}`),d.src=n.result},n.onerror=()=>a(`Failed to read file: ${e.name}`),n.readAsDataURL(e)})),l=()=>{if(0===c.length)return;t.classList.remove("hidden");const e=m(c),a=i(c,e),n=s(c,a);h(e,n),g(c,a,e,n)},m=e=>d.checked?Math.max(...e.map((e=>e.width))):Math.min(...e.map((e=>e.width))),i=(e,t)=>e.map((e=>t/e.width)),s=(e,t)=>e.map(((e,a)=>e.height*t[a])),h=(t,a)=>{e.width=t,e.height=a.reduce(((e,t)=>e+t),0)},g=(e,t,n,d)=>{let o=0;e.forEach(((e,t)=>{a.drawImage(e,0,o,n,d[t]),o+=d[t]}))};n.addEventListener("change",(e=>{const t=e.target.files;t.length&&(async e=>{try{c=await Promise.all(Array.from(e).map(r)),l()}catch(e){console.error(e)}})(t)})),o.addEventListener("click",(()=>{const t=e.toDataURL("image/jpeg",.92),a=document.createElement("a");a.href=t,a.download="canvas.jpg",a.click()})),d.addEventListener("change",l)})();