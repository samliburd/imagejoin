(()=>{const e=document.getElementById("canvas"),t=document.getElementById("canvasContainer"),a=e.getContext("2d"),n=document.getElementById("upload"),d=document.getElementById("scaleCheckbox"),o=document.getElementById("download");let c=[];const l=()=>t.classList.add("hidden");l();const m=e=>new Promise(((t,a)=>{const n=new FileReader;n.onload=()=>{const d=new Image;d.onload=()=>t(d),d.onerror=()=>a(`Failed to load image: ${e.name}`),d.src=n.result},n.onerror=()=>a(`Failed to read file: ${e.name}`),n.readAsDataURL(e)})),r=()=>{if(0===c.length)return void l();t.classList.remove("hidden");const e=i(c),a=s(c,e),n=g(c,a);h(e,n),u(c,a,e,n)},i=e=>d.checked?Math.max(...e.map((e=>e.width))):Math.min(...e.map((e=>e.width))),s=(e,t)=>e.map((e=>t/e.width)),g=(e,t)=>e.map(((e,a)=>e.height*t[a])),h=(t,a)=>{e.width=t,e.height=a.reduce(((e,t)=>e+t),0)},u=(e,t,n,d)=>{let o=0;e.forEach(((e,t)=>{a.drawImage(e,0,o,n,d[t]),o+=d[t]}))};n.addEventListener("change",(e=>{const t=e.target.files;t.length&&(async e=>{try{l(),c=await Promise.all(Array.from(e).map(m)),c.length>0?r():l()}catch(e){console.error(e),l()}})(t)})),o.addEventListener("click",(()=>{const t=document.getElementById("filename").value.trim()||"joinedimage",a=e.toDataURL("image/jpeg",.92),n=document.createElement("a");n.href=a,n.download=`${t}.jpg`,n.click()})),d.addEventListener("change",r)})();